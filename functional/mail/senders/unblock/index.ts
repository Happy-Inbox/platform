/**
 * @packageDocumentation
 * @module api.functional.mail.senders.unblock
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import type { IConnection, Primitive, Resolved } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { AuthorizationHeaders } from "../../../../core.types";
import type { BlockSenderRequest } from "../../../../mail.controller.types";

/**
 * Unblock emails from a sender
 * 
 * @controller MailController.unblockSender
 * @path PUT /mail/senders/:senderId/unblock
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function unblockSender(
    connection: IConnection<unblockSender.Headers>,
    senderId: number,
): Promise<unblockSender.Output> {
    return PlainFetcher.fetch(
        connection,
        {
            ...unblockSender.METADATA,
            path: unblockSender.path(senderId),
        } as const,
    );
}
export namespace unblockSender {
    export type Headers = Resolved<AuthorizationHeaders>;
    export type Output = Primitive<BlockSenderRequest.Response>;

    export const METADATA = {
        method: "PUT",
        path: "/mail/senders/:senderId/unblock",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    } as const;

    export const path = (senderId: number): string => {
        return `/mail/senders/${encodeURIComponent(senderId ?? "null")}/unblock`;
    }
}