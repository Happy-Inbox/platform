/**
 * @packageDocumentation
 * @module api.functional.mail
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

export * as senders from "./senders";

/**
 * @controller MailController.getEmail
 * @path GET /mail/:emailId
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getEmail(
    connection: IConnection,
    emailId: string,
): Promise<void> {
    return PlainFetcher.fetch(
        connection,
        {
            ...getEmail.METADATA,
            path: getEmail.path(emailId),
        } as const,
    );
}
export namespace getEmail {

    export const METADATA = {
        method: "GET",
        path: "/mail/:emailId",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    } as const;

    export const path = (emailId: string): string => {
        return `/mail/${encodeURIComponent(emailId ?? "null")}`;
    }
}

/**
 * @controller MailController.deleteEmail
 * @path DELETE /mail/:emailId
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function deleteEmail(
    connection: IConnection,
    emailId: string,
): Promise<void> {
    return PlainFetcher.fetch(
        connection,
        {
            ...deleteEmail.METADATA,
            path: deleteEmail.path(emailId),
        } as const,
    );
}
export namespace deleteEmail {

    export const METADATA = {
        method: "DELETE",
        path: "/mail/:emailId",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    } as const;

    export const path = (emailId: string): string => {
        return `/mail/${encodeURIComponent(emailId ?? "null")}`;
    }
}